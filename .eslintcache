[{"/Users/apollo/Desktop/it/itkamasutra/src/index.js":"1","/Users/apollo/Desktop/it/itkamasutra/src/App.js":"2","/Users/apollo/Desktop/it/itkamasutra/src/Redux/profile-reducer.js":"3","/Users/apollo/Desktop/it/itkamasutra/src/Redux/sidebar-reducer.js":"4","/Users/apollo/Desktop/it/itkamasutra/src/Redux/store.js":"5","/Users/apollo/Desktop/it/itkamasutra/src/Redux/redux-store.js":"6","/Users/apollo/Desktop/it/itkamasutra/src/Redux/users-reducer.js":"7","/Users/apollo/Desktop/it/itkamasutra/src/components/Common/Preloader/Preloader.js":"8","/Users/apollo/Desktop/it/itkamasutra/src/Redux/auth-reducer.js":"9","/Users/apollo/Desktop/it/itkamasutra/src/api/api.js":"10","/Users/apollo/Desktop/it/itkamasutra/src/utils/validators/validators.js":"11","/Users/apollo/Desktop/it/itkamasutra/src/Redux/app-reducer.js":"12","/Users/apollo/Desktop/it/itkamasutra/src/Redux/users-selectors.js":"13","/Users/apollo/Desktop/it/itkamasutra/src/utils/object-helpers.js":"14","/Users/apollo/Desktop/it/itkamasutra/src/redux/redux-store.js":"15","/Users/apollo/Desktop/it/itkamasutra/src/redux/app-reducer.js":"16","/Users/apollo/Desktop/it/itkamasutra/src/components/common/Preloader/Preloader.js":"17","/Users/apollo/Desktop/it/itkamasutra/src/serviceWorker.js":"18","/Users/apollo/Desktop/it/itkamasutra/src/hoc/withSuspense.js":"19","/Users/apollo/Desktop/it/itkamasutra/src/redux/sidebar-reducer.js":"20","/Users/apollo/Desktop/it/itkamasutra/src/redux/profile-reducer.js":"21","/Users/apollo/Desktop/it/itkamasutra/src/hoc/withAuthRedirect.js":"22","/Users/apollo/Desktop/it/itkamasutra/src/redux/dialogs-reducer.js":"23","/Users/apollo/Desktop/it/itkamasutra/src/redux/auth-reducer.js":"24","/Users/apollo/Desktop/it/itkamasutra/src/redux/users-reducer.js":"25","/Users/apollo/Desktop/it/itkamasutra/src/components/common/FormsControls/FormsControls.js":"26","/Users/apollo/Desktop/it/itkamasutra/src/components/Users/UsersContainer.js":"27","/Users/apollo/Desktop/it/itkamasutra/src/redux/users-selectors.js":"28","/Users/apollo/Desktop/it/itkamasutra/src/components/Users/Users.js":"29","/Users/apollo/Desktop/it/itkamasutra/src/components/Users/User.js":"30","/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/ProfileContainer.js":"31","/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/Profile.js":"32","/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/ProfileInfo/ProfileInfo.js":"33","/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/ProfileInfo/ProfileStatusWithHooks.js":"34","/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/ProfileInfo/ProfileDataForm.js":"35","/Users/apollo/Desktop/it/itkamasutra/src/components/Navbar/Navbar.js":"36","/Users/apollo/Desktop/it/itkamasutra/src/components/Login/Login.js":"37","/Users/apollo/Desktop/it/itkamasutra/src/components/Header/HeaderContainer.js":"38","/Users/apollo/Desktop/it/itkamasutra/src/components/Header/Header.js":"39","/Users/apollo/Desktop/it/itkamasutra/src/components/Dialogs/DialogsContainer.js":"40","/Users/apollo/Desktop/it/itkamasutra/src/components/Dialogs/Dialogs.js":"41","/Users/apollo/Desktop/it/itkamasutra/src/components/common/Paginator/Paginator.js":"42","/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/MyPosts/MyPostsContainer.js":"43","/Users/apollo/Desktop/it/itkamasutra/src/components/Dialogs/Message/Message.js":"44","/Users/apollo/Desktop/it/itkamasutra/src/components/Dialogs/DialogItem/DialogItem.js":"45","/Users/apollo/Desktop/it/itkamasutra/src/components/Dialogs/AddMessageForm/AddMessageForm.js":"46","/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/MyPosts/MyPosts.js":"47","/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/MyPosts/Post/Post.js":"48"},{"size":477,"mtime":1614169466059,"results":"49","hashOfConfig":"50"},{"size":2700,"mtime":1614418729628,"results":"51","hashOfConfig":"50"},{"size":2853,"mtime":1614160175041,"results":"52","hashOfConfig":"50"},{"size":120,"mtime":1613481614561,"results":"53","hashOfConfig":"50"},{"size":1488,"mtime":1612030250866,"results":"54","hashOfConfig":"50"},{"size":964,"mtime":1613803271117,"results":"55","hashOfConfig":"50"},{"size":3490,"mtime":1614169466061,"results":"56","hashOfConfig":"50"},{"size":247,"mtime":1614169466058,"results":"57","hashOfConfig":"50"},{"size":1535,"mtime":1614169466059,"results":"58","hashOfConfig":"50"},{"size":1881,"mtime":1614342329420,"results":"59","hashOfConfig":"50"},{"size":266,"mtime":1614169466062,"results":"60","hashOfConfig":"50"},{"size":645,"mtime":1613475683455,"results":"61","hashOfConfig":"50"},{"size":847,"mtime":1614169466061,"results":"62","hashOfConfig":"50"},{"size":240,"mtime":1614169466061,"results":"63","hashOfConfig":"50"},{"size":918,"mtime":1614336610316,"results":"64","hashOfConfig":"50"},{"size":862,"mtime":1614169466059,"results":"65","hashOfConfig":"50"},{"size":247,"mtime":1614169466058,"results":"66","hashOfConfig":"50"},{"size":4948,"mtime":1614165149545,"results":"67","hashOfConfig":"50"},{"size":301,"mtime":1614169466058,"results":"68","hashOfConfig":"50"},{"size":140,"mtime":1614169466060,"results":"69","hashOfConfig":"50"},{"size":3283,"mtime":1614414027888,"results":"70","hashOfConfig":"50"},{"size":589,"mtime":1614169466058,"results":"71","hashOfConfig":"50"},{"size":988,"mtime":1614169466059,"results":"72","hashOfConfig":"50"},{"size":2109,"mtime":1614342322249,"results":"73","hashOfConfig":"50"},{"size":3490,"mtime":1614169466061,"results":"74","hashOfConfig":"50"},{"size":1163,"mtime":1614169466057,"results":"75","hashOfConfig":"50"},{"size":1837,"mtime":1614171416155,"results":"76","hashOfConfig":"50"},{"size":847,"mtime":1614169466061,"results":"77","hashOfConfig":"50"},{"size":803,"mtime":1614171420443,"results":"78","hashOfConfig":"50"},{"size":1592,"mtime":1614171422911,"results":"79","hashOfConfig":"50"},{"size":1761,"mtime":1614171433275,"results":"80","hashOfConfig":"50"},{"size":610,"mtime":1614171436434,"results":"81","hashOfConfig":"50"},{"size":2465,"mtime":1614171449096,"results":"82","hashOfConfig":"50"},{"size":1081,"mtime":1614171442186,"results":"83","hashOfConfig":"50"},{"size":1506,"mtime":1614171451425,"results":"84","hashOfConfig":"50"},{"size":972,"mtime":1614171476253,"results":"85","hashOfConfig":"50"},{"size":1727,"mtime":1614342307538,"results":"86","hashOfConfig":"50"},{"size":430,"mtime":1614171485603,"results":"87","hashOfConfig":"50"},{"size":545,"mtime":1614171483226,"results":"88","hashOfConfig":"50"},{"size":696,"mtime":1614171491234,"results":"89","hashOfConfig":"50"},{"size":1227,"mtime":1614171494781,"results":"90","hashOfConfig":"50"},{"size":1436,"mtime":1614171512810,"results":"91","hashOfConfig":"50"},{"size":620,"mtime":1614171460266,"results":"92","hashOfConfig":"50"},{"size":190,"mtime":1614171498151,"results":"93","hashOfConfig":"50"},{"size":340,"mtime":1614171501856,"results":"94","hashOfConfig":"50"},{"size":783,"mtime":1614171505116,"results":"95","hashOfConfig":"50"},{"size":1411,"mtime":1614171463124,"results":"96","hashOfConfig":"50"},{"size":392,"mtime":1614171467261,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"4bfa6l",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"100"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"100"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"100"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"100"},"/Users/apollo/Desktop/it/itkamasutra/src/index.js",[],["218","219"],"/Users/apollo/Desktop/it/itkamasutra/src/App.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/Redux/profile-reducer.js",["220","221"],"import { profileAPI, userAPI } from \"../api/api\";\nimport Profile from \"../components/Profile/Profile\";\n\nconst ADD_POST = 'ADD_POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_USER_STATUS = 'SET_USER_STATUS';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\nconst SET_ACCOUNT_INFO = 'SET_ACCOUNT_INFO';\n\nconst initialState = {\n  posts: [\n    { id: 0, message: 'Hi, how are you', likesCount: 0 },\n    { id: 1, message: \"It's my first post\", likesCount: 23 },\n    { id: 2, message: \"blabla\", likesCount: 11 },\n    { id: 3, message: \"DaDa\", likesCount: 12 },\n  ],\n  profile: null,\n  status: \"\",\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: 5,\n        message: action.newPostText,\n        likesCount: 0\n      };\n      return {\n        ...state,\n        posts: [...state.posts, newPost],\n        newPostText: \"\",\n      }\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        profile: action.profile,\n      }\n    case SET_USER_STATUS:\n      return {\n        ...state,\n        status: action.status,\n      }\n    case SAVE_PHOTO_SUCCESS:\n      return {\n        ...state,\n        profile: { ...state.profile, photos: action.photos }\n      }\n    case SET_ACCOUNT_INFO:\n      return {\n        ...state,\n        profole: action.info\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = (newPostText) => {\n  return { type: ADD_POST, newPostText }\n};\nexport const setUserProfile = (profile) => {\n  return { type: SET_USER_PROFILE, profile }\n};\nexport const setStatus = (status) => {\n  return { type: SET_USER_STATUS, status: status }\n};\nconst savePhotoSuccess = (photos) => {\n  return { type: SAVE_PHOTO_SUCCESS, photos }\n};\n\nconst setAccountInfo = (info) => {\n  return { type: SET_ACCOUNT_INFO, info }\n};\n\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n  const response = await userAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data))\n};\n\nexport const getUserStatus = (userId) => async (dispatch) => {\n  const response = await profileAPI.getStatus(userId)\n  dispatch(setStatus(response.data))\n};\n\nexport const updateUserStatus = (status) => (dispatch) => {\n  const response = profileAPI.updateStatus(status)\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status))\n  }\n}\n\nexport const savePhoto = (file) => async (dispatch) => {\n  const response = await profileAPI.savePhoto(file);\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos))\n  }\n};\n\nexport const updateAccountInfo = (data) => async (dispatch) => {\n  const response = await profileAPI.putInfo(data);\n  if (response.resultCode === 0) {\n    dispatch(setAccountInfo(data))\n  }\n};\n\nexport default profileReducer;",["222","223"],"/Users/apollo/Desktop/it/itkamasutra/src/Redux/sidebar-reducer.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/Redux/store.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/Redux/redux-store.js",["224"],"import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\nimport authReducer from \"./auth-reducer\";\nimport dialogReducer from \"./dialog-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport appReducer from \"./app-reducer\";\n\nconst rootReduser = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogReducer,\n  usersPage: usersReducer,\n  // sidebar: sidebarReducer,\n  auth: authReducer,\n  form: formReducer,\n  app: appReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReduser, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n\n//const store = createStore(rootReduser, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n\nexport default store;","/Users/apollo/Desktop/it/itkamasutra/src/Redux/users-reducer.js",["225"],"import { userAPI } from \"../api/api\";\nimport { updateObjectInArray } from '../utils/object-helpers'\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nconst initialState = {\n  users: [],\n  pageSize: 100,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: [],\n}\n\n\nconst usersReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\n        // users: state.users.map(u => {\n        //   if (u.id === action.userId) {\n        //     return {\n        //       ...u,\n        //       followed: true\n        //     }\n        //   }\n        //   return u;\n        // })\n      }\n\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\n        // users: state.users.map(u => {\n        //   if (u.id === action.userId) {\n        //     return {\n        //       ...u,\n        //       followed: false,\n        //     }\n        //   }\n        //   return u;\n        // })\n      }\n\n    case SET_USERS:\n      return {\n        ...state,\n        users: action.users,\n      }\n    case SET_TOTAL_USERS_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.totalUsersCount,\n      }\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage\n      }\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      }\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter(id => id != action.userId)\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = (userId) => {\n  return { type: FOLLOW, userId }\n};\nexport const unFollowSuccess = (userId) => {\n  return { type: UNFOLLOW, userId }\n};\nexport const setUsers = (users) => {\n  return { type: SET_USERS, users }\n};\nexport const setTotalUsersCount = (totalUsersCount) => {\n  return { type: SET_TOTAL_USERS_COUNT, totalUsersCount }\n};\nexport const setCurrentPage = (currentPage) => {\n  return { type: SET_CURRENT_PAGE, currentPage }\n};\nexport const toggleIsFetching = (isFetching) => {\n  return { type: TOGGLE_IS_FETCHING, isFetching }\n}\nexport const toggleFollowingProgress = (isFetching, userId) => {\n  return { type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId }\n}\n\n\nexport const requestUsers = (page, currentPag = 1) => async (dispatch) => {\n  dispatch(toggleIsFetching(true));\n  dispatch(setCurrentPage(currentPag));\n  const data = await userAPI.getUsers(page, currentPag)\n  dispatch(toggleIsFetching(false));\n  dispatch(setTotalUsersCount(data.totalCount))\n  dispatch(setUsers(data.items))\n};\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  const response = await apiMethod(userId);\n  if (response.data.resultCode === 0) {\n    dispatch(actionCreator(userId))\n  }\n  dispatch(toggleFollowingProgress(false, userId))\n}\n\nexport const follow = (userId) => (dispatch) => {\n  followUnfollowFlow(dispatch, userId, userAPI.follow.bind(this), followSuccess)\n}\n\nexport const unFollow = (userId) => (dispatch) => {\n  followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(this), unFollowSuccess)\n}\n\n// export const follow = (userId) => async (dispatch) => {\n//   dispatch(toggleFollowingProgress(true, userId));\n//   const response = await userAPI.follow(userId);\n//   if (response.data.resultCode === 0) {\n//     dispatch(followSuccess(userId))\n//   }\n//   dispatch(toggleFollowingProgress(false, userId))\n// }\n\n// export const unFollow = (userId) => async (dispatch) => {\n//   dispatch(toggleFollowingProgress(true, userId));\n//   const response = await userAPI.unfollow(userId);\n//   if (response.data.resultCode === 0) {\n//     dispatch(unFollowSuccess(userId))\n//   }\n//   dispatch(toggleFollowingProgress(false, userId))\n// }\n\n\nexport default usersReducer;",["226","227"],"/Users/apollo/Desktop/it/itkamasutra/src/components/Common/Preloader/Preloader.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/Redux/auth-reducer.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/api/api.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/utils/validators/validators.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/Redux/app-reducer.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/Redux/users-selectors.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/utils/object-helpers.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/redux/redux-store.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/redux/app-reducer.js",["228","229"],"import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    //dispatch(somethingelse());\n    //dispatch(somethingelse());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","/Users/apollo/Desktop/it/itkamasutra/src/components/common/Preloader/Preloader.js",["230"],"import React from 'react';\nimport preloader from \"../../../assets/images/preloader.svg\";\n\nlet Preloader = (props) => {\n    return <div  style={ { backgroundColor: 'white' } }>\n        <img src={preloader} />\n    </div>\n}\n\nexport default Preloader;","/Users/apollo/Desktop/it/itkamasutra/src/serviceWorker.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/hoc/withSuspense.js",["231"],"import React from \"react\";\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <React.Suspense fallback={<div>loading...</div>} >\n            <Component {...props} />\n        </React.Suspense>\n    };\n}","/Users/apollo/Desktop/it/itkamasutra/src/redux/sidebar-reducer.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/redux/profile-reducer.js",["232"],"import { profileAPI, usersAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi, how are you?', likesCount: 12 },\r\n        { id: 2, message: 'It\\'s my first post', likesCount: 11 },\r\n        { id: 3, message: 'Blabla', likesCount: 11 },\r\n        { id: 4, message: 'Dada', likesCount: 11 }\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(p => p.id != action.postId) }\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return { ...state, profile: { ...state.profile, photos: action.photos } }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos })\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.getStatus(userId);\r\n        dispatch(setStatus(response.data));\r\n    } catch {\r\n        //\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", { _error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;","/Users/apollo/Desktop/it/itkamasutra/src/hoc/withAuthRedirect.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/redux/dialogs-reducer.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/redux/auth-reducer.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/redux/users-reducer.js",["233","234"],"import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [],\n    fake: 10\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n})\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode == 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n}\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\nexport default usersReducer;","/Users/apollo/Desktop/it/itkamasutra/src/components/common/FormsControls/FormsControls.js",["235"],"import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport {required} from \"../../../utils/validators/validators\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n)","/Users/apollo/Desktop/it/itkamasutra/src/components/Users/UsersContainer.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/redux/users-selectors.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/components/Users/Users.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/components/Users/User.js",["236"],"import React from 'react';\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport {NavLink} from \"react-router-dom\";\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n       <div>\n                <span>\n                    <div>\n                       <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\n                             className={styles.userPhoto}/>\n                       </NavLink>\n                    </div>\n                    <div>\n                        {user.followed\n                            ? <button disabled={followingInProgress\n                                .some(id => id === user.id)}\n                                      onClick={() => { unfollow(user.id) }}>\n                                Unfollow</button>\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\n                                      onClick={() => { follow(user.id) }}>\n                                      Follow</button>}\n\n                    </div>\n                </span>\n                <span>\n                    <span>\n                        <div>{user.name}</div>\n                        <div>{user.status}</div>\n                    </span>\n                    <span>\n                        <div>{\"user.location.country\"}</div>\n                        <div>{\"user.location.city\"}</div>\n                    </span>\n                </span>\n            </div>)\n}\n\nexport default User;","/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/ProfileContainer.js",["237"],"import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId ) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n       // console.log(\"RENDER PROFILE\");\n        return (\n            <Profile {...this.props}\n                    isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    //console.log('mapStateToProps PROFILE')\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n}\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n","/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/Profile.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/ProfileInfo/ProfileInfo.js",["238"],"import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n                { editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner}/> }\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/ProfileInfo/ProfileStatusWithHooks.js",["239"],"import React, {useState, useEffect} from 'react';\nimport s from './ProfileInfo.module.css';\n\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            { !editMode &&\n            <div>\n                <b>Status: </b> <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\n                       value={status} />\n            </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;","/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/ProfileInfo/ProfileDataForm.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/components/Navbar/Navbar.js",["240","241","242"],"import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","/Users/apollo/Desktop/it/itkamasutra/src/components/Login/Login.js",["243","244"],"import React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\nimport { required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\n\nconst LoginForm = ({ handleSubmit, error, captcha }) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\n            {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\n\n            {captcha && <img src={captcha} />}\n            {captcha && createField(\"Enter the captcha\", \"captcha\", [required], Input)}\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captcha={props.captcha} />\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    captcha: state.auth.captcha,\n})\n\nexport default connect(mapStateToProps, { login })(Login);","/Users/apollo/Desktop/it/itkamasutra/src/components/Header/HeaderContainer.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/components/Header/Header.js",["245"],"import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","/Users/apollo/Desktop/it/itkamasutra/src/components/Dialogs/DialogsContainer.js",["246","247"],"import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","/Users/apollo/Desktop/it/itkamasutra/src/components/Dialogs/Dialogs.js",["248","249","250"],"import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/Users/apollo/Desktop/it/itkamasutra/src/components/common/Paginator/Paginator.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/MyPosts/MyPostsContainer.js",["251"],"import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","/Users/apollo/Desktop/it/itkamasutra/src/components/Dialogs/Message/Message.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/components/Dialogs/DialogItem/DialogItem.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/components/Dialogs/AddMessageForm/AddMessageForm.js",[],"/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/MyPosts/MyPosts.js",["252"],"import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","/Users/apollo/Desktop/it/itkamasutra/src/components/Profile/MyPosts/Post/Post.js",["253"],"import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;",{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":15},{"ruleId":"258","severity":1,"message":"262","line":5,"column":7,"nodeType":"260","messageId":"261","endLine":5,"endColumn":27},{"ruleId":"254","replacedBy":"263"},{"ruleId":"256","replacedBy":"264"},{"ruleId":"258","severity":1,"message":"265","line":5,"column":8,"nodeType":"260","messageId":"261","endLine":5,"endColumn":22},{"ruleId":"266","severity":1,"message":"267","line":80,"column":55,"nodeType":"268","messageId":"269","endLine":80,"endColumn":57},{"ruleId":"254","replacedBy":"270"},{"ruleId":"256","replacedBy":"271"},{"ruleId":"258","severity":1,"message":"272","line":1,"column":9,"nodeType":"260","messageId":"261","endLine":1,"endColumn":16},{"ruleId":"258","severity":1,"message":"273","line":2,"column":9,"nodeType":"260","messageId":"261","endLine":2,"endColumn":19},{"ruleId":"274","severity":1,"message":"275","line":6,"column":9,"nodeType":"276","endLine":6,"endColumn":32},{"ruleId":"258","severity":1,"message":"277","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":47,"column":68,"nodeType":"268","messageId":"269","endLine":47,"endColumn":70},{"ruleId":"266","severity":1,"message":"267","line":51,"column":65,"nodeType":"268","messageId":"269","endLine":51,"endColumn":67},{"ruleId":"266","severity":1,"message":"278","line":88,"column":34,"nodeType":"268","messageId":"269","endLine":88,"endColumn":36},{"ruleId":"258","severity":1,"message":"279","line":3,"column":9,"nodeType":"260","messageId":"261","endLine":3,"endColumn":17},{"ruleId":"274","severity":1,"message":"275","line":12,"column":25,"nodeType":"276","endLine":13,"endColumn":60},{"ruleId":"266","severity":1,"message":"267","line":28,"column":44,"nodeType":"268","messageId":"269","endLine":28,"endColumn":46},{"ruleId":"274","severity":1,"message":"275","line":33,"column":17,"nodeType":"276","endLine":33,"endColumn":87},{"ruleId":"258","severity":1,"message":"280","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":9},{"ruleId":"281","severity":1,"message":"282","line":19,"column":17,"nodeType":"276","endLine":19,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":22,"column":17,"nodeType":"276","endLine":22,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":25,"column":17,"nodeType":"276","endLine":25,"endColumn":20},{"ruleId":"258","severity":1,"message":"283","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":15},{"ruleId":"274","severity":1,"message":"275","line":17,"column":25,"nodeType":"276","endLine":17,"endColumn":46},{"ruleId":"274","severity":1,"message":"275","line":7,"column":5,"nodeType":"276","endLine":7,"endColumn":75},{"ruleId":"258","severity":1,"message":"284","line":1,"column":8,"nodeType":"260","messageId":"261","endLine":1,"endColumn":13},{"ruleId":"258","severity":1,"message":"285","line":5,"column":9,"nodeType":"260","messageId":"261","endLine":5,"endColumn":17},{"ruleId":"258","severity":1,"message":"283","line":6,"column":9,"nodeType":"260","messageId":"261","endLine":6,"endColumn":14},{"ruleId":"258","severity":1,"message":"286","line":6,"column":16,"nodeType":"260","messageId":"261","endLine":6,"endColumn":25},{"ruleId":"258","severity":1,"message":"287","line":15,"column":9,"nodeType":"260","messageId":"261","endLine":15,"endColumn":23},{"ruleId":"258","severity":1,"message":"284","line":1,"column":8,"nodeType":"260","messageId":"261","endLine":1,"endColumn":13},{"ruleId":"258","severity":1,"message":"288","line":30,"column":9,"nodeType":"260","messageId":"261","endLine":30,"endColumn":23},{"ruleId":"274","severity":1,"message":"275","line":7,"column":7,"nodeType":"276","endLine":7,"endColumn":108},"no-native-reassign",["289"],"no-negated-in-lhs",["290"],"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'UPDATE_NEW_POST_TEXT' is assigned a value but never used.",["289"],["290"],"'sidebarReducer' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["289"],["290"],"'authAPI' is defined but never used.","'stopSubmit' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Preloader' is defined but never used.","Expected '===' and instead saw '=='.","'required' is defined but never used.","'s' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Field' is defined but never used.","'React' is defined but never used.","'Redirect' is defined but never used.","'reduxForm' is defined but never used.","'newMessageBody' is assigned a value but never used.","'newPostElement' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]